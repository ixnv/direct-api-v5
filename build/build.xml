<?xml version="1.0" encoding="UTF-8"?>
<project name="eLama Identity &amp; Access" default="main">
    <property name="project.dir" value="${phing.dir}/../"/>
    <property name="project.lib-dir" value="${project.dir}/lib/"/>
    <property name="project.www-user" value="www-data"/>
    <property name="project.php_executable" value="php"/>

    <target name="init">
        <property name="hhvm_return_value" value="1"/>
        <exec executable="hhvm" outputProperty="hhvm_return_value">
            <arg value="--version"/>
        </exec>
        <if>
            <contains string="${hhvm_return_value}" substring="HipHop" casesensitive="true"/>
            <then>
                <property name="project.php_executable" value="hhvm" override="true"/>
            </then>
        </if>

        <echo message="Using ${project.php_executable} as php interpreter"/>
    </target>

    <target name="composer-install">
        <echo>composer - version:</echo>
        <exec executable="${project.php_executable}" dir="${project.dir}" passthru="true">
            <arg value="bin/composer.phar"/>
            <arg value="--version"/>
        </exec>
        <exec executable="${project.php_executable}" dir="${project.dir}" passthru="true">
            <arg value="bin/composer.phar"/>
            <arg value="install"/>
            <arg value="--profile"/>
        </exec>
    </target>

    <target name="cache-clear">
        <phingcall target="-cache-clear">
            <property name="symfony_env" value="dev" />
        </phingcall>
        <phingcall target="-cache-clear">
            <property name="symfony_env" value="prod" />
        </phingcall>
    </target>

    <target name="-cache-clear">
        <exec executable="sudo" dir="${project.dir}" passthru="true">
            <arg value="-u"/>
            <arg value="${project.www-user}"/>
            <arg value="-E"/>
            <arg value="${project.php_executable}"/>
            <arg value="app/console"/>
            <arg value="cache:clear"/>
            <arg value="--env=${symfony_env}"/>
        </exec>
    </target>


    <target name="test-pull-request" depends="init">
        <phingcall target="composer-install"/>
        <phingcall target="-remove-cache">
            <property name="symfony_env" value="prod" />
        </phingcall>
        <phingcall target="-cache-clear">
            <property name="symfony_env" value="prod" />
        </phingcall>
        <phingcall target="run-tests"/>
    </target>

    <target name="-remove-cache" hidden="true">
        <exec executable="sudo" dir="${project.dir}" passthru="true" checkreturn="true">
            <arg value="-E"/>
            <arg value="-u"/>
            <arg value="${project.www-user}"/>
            <arg value="rm"/>
            <arg value="-rf"/>
            <arg value="app/cache/${symfony_env}"/>
        </exec>
    </target>

    <target name="run-tests">
        <exec executable="bin/phpunit" dir="${project.dir}" passthru="true" returnProperty="phpunit_return">
            <arg line="-c tests/phpunit.xml
            --log-junit build/phpunit/phpunit.xml" />
        </exec>

        <if>
            <not>
                <equals arg1="${phpunit_return}" arg2="0"/>
            </not>
            <then>
                <fail msg="Tests failed!"/>
            </then>
        </if>
    </target>

    <target name="php-code-sniffer">
        <exec executable="build/phpcs.sh" dir="${project.dir}" passthru="true" checkreturn="true"/>
    </target>

    <target name="main" depends="init, composer-install, cache-clear, run-tests"/>

</project>

